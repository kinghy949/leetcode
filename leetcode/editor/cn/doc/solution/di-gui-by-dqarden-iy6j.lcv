### 解题思路

1. 先判断某个链表是否为空，如果为空直接返回另一个链表

2. 如果两个链表均不为空，根据两链表的表头大小决定下一层的递归参数。因为 mergeTwoLists(list1, list2)函数会返回 list1 和 list2 两个链表合并后的结果，所以如果 l1.val  < l2.val, 把 l1.next 和 l2 两个链表的合并后的结果赋值给 l1.next, 这样就完成了2个链表的合并，l1.val > l2.val同理。

### 代码

* java

```java
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    // 简单的归并
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
       if(l1 == null){
           return l2;
       }
       if(l2 == null){
           return l1;
       }
       if(l1.val <= l2.val){
           l1.next = mergeTwoLists(l1.next, l2);
           return l1;
       }else{
           l2.next = mergeTwoLists(l1, l2.next);
           return l2;
       }
    }
}
```

